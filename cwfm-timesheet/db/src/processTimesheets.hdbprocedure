PROCEDURE "processTimesheets"() 
  LANGUAGE SQLSCRIPT 
  SQL SECURITY INVOKER AS 
BEGIN 
  /*********************************************
  Evaluate the reason for Partner inconsistency
  *********************************************/
  LT_BP_VAL = SELECT RECORDKEY, 'PROC' AS STATUS, 
		 CASE WHEN BP.PARTNER_ID IS NULL THEN 'BP01' 
	ELSE CASE WHEN BP.STATUS != 'ACTV' THEN 'BP03'
	ELSE CASE WHEN BP.IS_ARCHIVED = 'X' THEN 'BP02' 
	ELSE '' END END END AS REASON
  FROM CWFM_TIMESHEET AS TS LEFT JOIN VT_BUPA AS BP ON TS.PARTNERID = BP.PARTNER_ID
  WHERE TS.STATUS_CODE IN ('CREA','EROR');

  /*********************************************
  Set the status of the timesheet accordingly
  *********************************************/
  LT_BP_VAL = SELECT RECORDKEY, 
  CASE WHEN REASON != '' THEN 'EROR' ELSE 'PROC' END AS STATUS, REASON FROM :LT_BP_VAL;

  /*********************************************
  Update the status of the timesheets in DB
  *********************************************/
  MERGE INTO CWFM_TIMESHEET AS TS USING :LT_BP_VAL AS BP ON TS.RECORDKEY = BP.RECORDKEY
  WHEN MATCHED THEN UPDATE SET TS.STATUS_CODE = BP.STATUS, TS.STATUSREASON_CODE = BP.REASON;

  /**********************************************************
  Provide a unique Record ID for the newly created timesheets
  **********************************************************/
  UPDATE CWFM_TIMESHEET
  SET RECORDID = "timesheet_record_id".NEXTVAL
  WHERE RECORDID = ''
    OR RECORDID IS NULL;
END